<#+
//
void MakePocoRw(Table tbl, bool makeTsInterface)
{
	string autoIncrement = tbl.PK[0].IsAutoIncrement ? "true" : "false";

#>using System.ComponentModel.DataAnnotations;
using NPoco;

namespace <#=Namespace #>
{
	[TypeScriptModel]
	[TableName("<#=tbl.Name#>")]
<#+ if (tbl.PK != null) { #>
	[PrimaryKey("<#=String.Join(", ",tbl.PK.Select(x => x.Name))#>", AutoIncrement = <#=autoIncrement#>)]
<#+ } #>
	[ExplicitColumns]
	public partial class <#=tbl.ClassName#> <#+ if (GenerateOperations) { #>: <#=RepoName#>.Record<<#=tbl.ClassName#>><#+ }  if (tbl.PK!=null && tbl.PK[0].Name=="Id") { if (tbl.PK[0].IsAutoIncrement){ #>, Repositories.Core.IIdentity<#+ } else { #>, Repositories.Core.IKeyed<<#= tbl.PK[0].PropertyType#>><#+ } } #>

	{
<#+
	foreach(Column col in from c in tbl.Columns where !c.Ignore select c)
	{
		// Column bindings
#>

<#+ if (col.Name!=col.PropertyName) { #>
		[NPoco.Column("<#=col.Name#>")]
<#+ } else { #>
		[NPoco.Column]
<#+ }  #>
<#+ if ((col.PropertyType == "string") && (col.StringLength > 0)) { #>
		[StringLength(<#=col.StringLength #>)]
<#+ if (!col.IsNullable) { #>
		[Required()]
<#+ } #>
<#+ } #>
		public <#=col.PropertyType #><#=CheckNullable(col)#> <#=col.PropertyName #> { get; set; }

<#+ } // End - ForEach Column
#>	}
}
<#+
	SaveOutput(GetEntityFullPath(tbl, EntityType.PocoRw));
}
#>
